server:
  tomcat:
    uri-encoding: UTF-8
  port: 8060

# debug: true

logging:
  level:
    org.springframework.web: ERROR
    net.consensys: DEBUG
    net.consensys.configs: ERROR
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %-5p %c: %M - %m%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %-5p %c: %M - %m%n"
  file: /logs/application.log

ethereum:
  nodes:
  - name: default
#    url: ${ETHEREUM_NODE_URL:wss://mainnet.infura.io/ws/v3/6d00f1fc08d84be7a25d76996d16550b}
    #url: ${ETHEREUM_NODE_URL:https://kovan.infura.io/v3/4c41b8476e874c178c633ff442a27a1b}
    url: ${ETHEREUM_NODE_URL:http://192.168.66.210:8575}
    blockStrategy: POLL
    syncingThreshold: 100
    healthcheckInterval: 5000
    maxBlocksToSync: 0
    maxBlockCacheCount: 100

  healthcheck:
    pollInterval: 5000
  blockStrategy: POLL
  numBlocksToReplay: 12
  sync:
    batchSize: 500
  initialStartBlock: 648115

eventFilters:
  # - id: ValueSetOnTest
  #   node: default
  #   contractAddress: "0x740C31bbd233381cd5FF42621386C9A761D23880"
  #   eventSpecification:
  #     eventName: ValueSet
  #     IndexedParameterDefinitions:
  #       - position: 0
  #         type: UINT256
  #       - position: 1
  #         type: INT256
  #     NonIndexedParameterDefinitions:
  #       - position: 2
  #         type: STRING
  #       - position: 3
  #         type: BYTES4
  #   startBlock: 25817035
  #   queueName: "Serial-Test"
  #   routerKey: "ValueSet-Serial"
  - id: PairCreated
    node: default
    contractAddress: "0xBCfCcbde45cE874adCB698cC183deBcF17952812"
    eventSpecification:
      eventName: PairCreated
      IndexedParameterDefinitions:
        - position: 0
          type: ADDRESS
        - position: 1
          type: ADDRESS
      NonIndexedParameterDefinitions:
        - position: 2
          type: ADDRESS
        - position: 3
          type: UINT256
    #startBlock: 4100
    queueName: "bscQueue"
    routerKey: ""
    exchange: ""

#transactionFilters:
#- nodeName: ${ETHEREUM_NETWORK:default}
#  type: "TO_ADDRESS"
#  transactionIdentifierValue: "0x06012c8cf97bead5deae237070f9587f8e7a266d"

eventStore:
  type: DB
  url: http://localhost:8081/api/rest/v1
  eventPath: /event
  latestBlockPath: /latestblock
database:
  type: MONGO

broadcaster:
  type: RABBIT
  cache:
    expirationMillis: 6000000
  event:
    confirmation:
      numBlocksToWait: 12
      numBlocksToWaitForMissingTx: 100
      numBlocksToWaitBeforeInvalidating: 2
  multiInstance: false
  enableBlockNotifications: true

rabbitmq:
  exchange: ""
  blockNotification: false
  routingKey: 
    contractEvents: testOne
    blockEvents: EventOne
    transactionEvents: TxEventOne

# broadcaster:
#   type: KAFKA
#   cache:
#     expirationMillis: 6000000
#   event:
#     confirmation:
#       numBlocksToWait: 12
#       numBlocksToWaitForMissingTx: 100
#       numBlocksToWaitBeforeInvalidating: 2
#   multiInstance: false
#   enableBlockNotifications: true

# For Kafka
# zookeeper:
#   address: ${ZOOKEEPER_ADDRESS:localhost:2181}
# kafka:
#   bootstrap:
#     addresses: ${KAFKA_ADDRESSES:localhost:9092}
#   topic:
#     contractEvents: contract-events
#     blockEvents: block-events
#     eventeumEvents: eventeum-events
#     transactionEvents: transaction-events

#     partitions: 1
#     replicationSets: 1




management:
  endpoints:
    web.base-path: /monitoring
    enabled-by-default: false
    web.exposure.include: "*"
  endpoint:
    health:
      enabled: true
      show-details: always
    metrics:
      enabled: false
    prometheus:
      enabled: false
  metrics:
    export:
      prometheus:
        enabled: false

